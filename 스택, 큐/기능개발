import java.util.*;

class Solution {
    public int[] solution(int[] progresses, int[] speeds) {
	    Stack<Integer> stack=new Stack<>();
	    for(int i=progresses.length-1;i>=0;i--) {
	    	float temp=(float)(100-progresses[i])/(float)speeds[i];
	    	stack.add((int)Math.ceil(temp));
	    }
	    ArrayList<Integer> list=new ArrayList<>();
	    int tempSum=1;
	    int tempNum=stack.pop();
	    while(true) {
	    	if(stack.isEmpty()) {
	    		list.add(tempSum);
	    		break;
	    	}
	    	if(stack.peek()<=tempNum) {
	    		tempSum++;
	    		stack.pop();
	    	}
	    	else {
	    		list.add(tempSum);
	    		tempSum=1;
	    		tempNum=stack.pop();
	    	}
	    }
	    int[] answer= new int[list.size()];
	    for(int i=0;i<list.size();i++) {
	    	answer[i]=list.get(i);
	    }
	    return answer;
    }
}
