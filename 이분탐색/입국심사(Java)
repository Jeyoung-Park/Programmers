import java.util.Arrays;

class Solution {
    public long solution(int n, int[] times) {
        long answer = 0;
        Arrays.sort(times);
        answer=binarySearch(n, times, times[times.length-1]);
        return answer;
    }
    long binarySearch(int n, int[] times, long max){
        long left=1, right=max*n;
        long mid=0;
        long ans= Long.MAX_VALUE;

        while (left<=right){
            mid=(left+right)/2;
            if(isPassed(times, n, mid)){
                ans=Math.min(ans, mid);
                right=mid-1;
            }
            else left=mid+1;
        }
        return ans;
    }

    boolean isPassed(int[] times, int n, long mid){
        long amount=0;
        for(int i=0;i<times.length;i++){
            amount+=mid/times[i]; //각 심사위원들이 심사할 수 있는 최대 인원의 합
        }
        if(amount>=n) return true;
        else return false;
    }
}
